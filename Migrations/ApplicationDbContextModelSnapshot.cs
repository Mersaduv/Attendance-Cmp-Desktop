// <auto-generated />
using System;
using AttandenceDesktop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttandenceDesktop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("AttandenceDesktop.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttendanceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("EarlyArrivalMinutes")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("EarlyDepartureMinutes")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ExpectedWorkHours")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEarlyArrival")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEarlyDeparture")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFlexibleSchedule")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLateArrival")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOvertime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<TimeSpan?>("LateMinutes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("OvertimeMinutes")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("WorkDuration")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Operations"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSyncTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FingerprintTemplate1")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("FingerprintTemplate2")
                        .HasColumnType("BLOB");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFlexibleHours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("RequiredWorkHoursPerDay")
                        .HasColumnType("REAL");

                    b.Property<int?>("WorkScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZkUserId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("WorkScheduleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.PunchLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceRowId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PunchTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PunchType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PunchLogs");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.WorkCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRecurringAnnually")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkCalendars");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.WorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlexTimeAllowanceMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFlexibleSchedule")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDayFriday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDayMonday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDaySaturday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDaySunday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDayThursday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDayTuesday")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWorkingDayWednesday")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalWorkHours")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("WorkSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard work schedule from 9 AM to 5 PM, Monday to Friday",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            FlexTimeAllowanceMinutes = 15,
                            IsFlexibleSchedule = false,
                            IsWorkingDayFriday = true,
                            IsWorkingDayMonday = true,
                            IsWorkingDaySaturday = false,
                            IsWorkingDaySunday = false,
                            IsWorkingDayThursday = true,
                            IsWorkingDayTuesday = true,
                            IsWorkingDayWednesday = true,
                            Name = "Standard 9-5",
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            TotalWorkHours = 8.0
                        });
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Attendance", b =>
                {
                    b.HasOne("AttandenceDesktop.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Employee", b =>
                {
                    b.HasOne("AttandenceDesktop.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AttandenceDesktop.Models.WorkSchedule", "WorkSchedule")
                        .WithMany("Employees")
                        .HasForeignKey("WorkScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("WorkSchedule");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.PunchLog", b =>
                {
                    b.HasOne("AttandenceDesktop.Models.Device", "Device")
                        .WithMany("PunchLogs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttandenceDesktop.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.WorkSchedule", b =>
                {
                    b.HasOne("AttandenceDesktop.Models.Department", "Department")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.Device", b =>
                {
                    b.Navigation("PunchLogs");
                });

            modelBuilder.Entity("AttandenceDesktop.Models.WorkSchedule", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
